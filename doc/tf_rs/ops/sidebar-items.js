initSidebarItems({"enum":[["Attribute","Enumerates possible operation attributes."],["TensorContent","An enumeration of the the different types of tensors."]],"fn":[["add","Returns x + y element-wise."],["add_n","Adds all input tensors element-wise."],["assert_eq",""],["assert_greater",""],["assign",""],["cast","Casts a tensor to a new type."],["concat","Concatenates tensors along one dimension."],["cond","Return `true_fn()` if the predicate `pred` is true else `false_fn()`."],["conj","Returns the complex conjugate of a complex number."],["constant_initializer",""],["divide","Divide `x` by `y` element-wise."],["equal","Returns the truth value of (x == y) element-wise."],["exp",""],["expand_dims","Inserts a dimension of 1 into a tensor's shape."],["fill","Creates a tensor filled with a scalar value."],["gather","Gather slices from params axis axis according to indices."],["greater",""],["less",""],["log",""],["logical_not",""],["matmul","Multiplies matrix `a` by matrix `b`, producing `a` * `b`."],["merge",""],["minimum","Returns the min of x and y (i.e. x < y ? x : y) element-wise."],["multiply",""],["pow","Computes the power of one value to another."],["random_normal_initializer",""],["range","Creates a sequence of numbers."],["rank","Returns the rank of a tensor."],["reduce_all",""],["reduce_logsumexp",""],["reduce_max",""],["reduce_sum",""],["ref_merge",""],["ref_switch",""],["reshape","Reshapes a tensor."],["shape","Returns the shape of a tensor."],["size","Returns the size of a tensor."],["slice","Extracts a slice from a tensor."],["squeeze","Removes dimensions of size 1 from the shape of a tensor."],["stop_gradient",""],["sub",""],["switch",""],["tanh","Computes hyperbolic tangent of `x` element-wise."],["to_float","Casts a tensor to type float."],["transpose","Transposes `a`. Permutes the dimensions according to `perm`."],["unsorted_segment_sum","Computes the sum along segments of a tensor."],["where_cond","Return the elements, either from x or y, depending on the condition."],["zeros","Creates a tensor with all elements set to zero."],["zeros_initializer","Initializer that generates tensors initialized to 0."]],"struct":[["Assert","Asserts that the given condition is true."],["Constant","Constant"],["Group","Create an op that groups multiple operations."],["NodeIdent","This is a token to identify computation elements in the graph."],["Scope","Master context manager for building TensorFlow graphs and managing session execution."],["Tensor","Tensor"],["Variable","Variable"]],"trait":[["DefinedShape","Methods to determine and get the shape of a tensor if it's actually defined."],["GetIdent","Get the identity token of an tensor or an operation."],["ShapeSize","Marker for types which can be used to define a tensor shape."]]});